generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int            @id @default(autoincrement())
  firstName     String
  lastName      String
  email         String         @unique
  password      String
  habits        Habit[]
  reminders     Reminder[]
  notifications Notification[]
}

model Habit {
  id           String         @id @default(cuid())
  title        String
  userId       Int
  user         User           @relation(fields: [userId], references: [id])
  frequency    Frequency      @default(DAILY)
  streakCount  Int            @default(0)
  reminders    Reminder[]
  habitLogs    HabitLog[]
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  Notification Notification[]
}

model HabitLog {
  id        String   @id @default(cuid())
  date      DateTime @default(now())
  completed Boolean  @default(false)
  habitId   String
  habit     Habit    @relation(fields: [habitId], references: [id])
}

model Reminder {
  id           String   @id @default(cuid())
  time         String
  timezone     String
  triggerAtUtc DateTime
  recurring    Boolean  @default(false)
  message      String
  active       Boolean  @default(true)
  userId       Int
  user         User     @relation(fields: [userId], references: [id])
  habitId      String?
  habit        Habit?   @relation(fields: [habitId], references: [id])
  createdAt    DateTime @default(now())
}

model Notification {
  id        String   @id @default(cuid())
  message   String
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  habitId   String?
  habit     Habit?    @relation(fields: [habitId], references: [id])
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

enum Frequency {
  DAILY
  WEEKLY
}
